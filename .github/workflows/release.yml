name: Release

permissions:
  pull-requests: write
  contents: write

on:
  workflow_run:
    workflows:
      - "Test"
    types:
      - completed
    branches:
      - main
  push:
    branches:
      - main

jobs:
  release-crates:
    name: Release crates
    runs-on: ubuntu-latest
    if: github.repository_owner == 'agglayer' && github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_sha }}
      - name: Create local branch
        run: git switch -c release-${{ github.run_id }} || git switch release-${{ github.run_id }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run release-plz
        uses: release-plz/action@v0.5
        with:
          command: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  release-create-pr:
    name: Release - open PR
    runs-on: ubuntu-latest
    if: github.repository_owner == 'agglayer' && github.event_name == 'push'
    permissions:
      contents: write
      pull-requests: write
    concurrency:
      group: release-plz-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-make
        run: cargo install cargo-make

      - name: Install release-plz
        run: cargo install --locked release-plz

      - name: Generate changelogs
        run: |
          set -e

          # Run release-plz update to bump versions
          release-plz update

          # Generate changelogs with new versions
          cargo make changelog-version-all

          # Stage only CHANGELOG.md files
          git add '**/CHANGELOG.md'

          # Restore everything else to original state
          git restore .

      - name: Run release-plz
        uses: release-plz/action@v0.5
        id: release-plz
        with:
          command: release-pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
