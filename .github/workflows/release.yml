name: Release

permissions:
  pull-requests: write
  contents: write

on:
  workflow_run:
    workflows:
      - "Test"
    types:
      - completed
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      dry-run:
        description: "Run in dry-run mode (will not publish crates)"
        required: false
        type: boolean
        default: false
      tag:
        description: "Tag to release from (e.g., v1.0.0)"
        required: false
        type: string

jobs:
  release-crates:
    name: Release crates
    runs-on: ubuntu-latest
    if: |
      github.repository_owner == 'agglayer' && (
        (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
        github.event_name == 'workflow_dispatch'
      )
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || (inputs.tag && inputs.tag != 'main' && inputs.tag) || github.sha }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run release-plz (dry-run)
        if: github.event_name == 'workflow_dispatch' && inputs.dry-run
        uses: release-plz/action@v0.5
        with:
          command: release
          args: --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Run release-plz (publish)
        if: |
          (github.event_name == 'workflow_run') ||
          (github.event_name == 'workflow_dispatch' && !inputs.dry-run)
        uses: release-plz/action@v0.5
        with:
          command: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  release-create-pr:
    name: Release - open PR
    runs-on: ubuntu-latest
    if: github.repository_owner == 'agglayer' && github.event_name == 'push'
    permissions:
      contents: write
      pull-requests: write
    concurrency:
      group: release-plz-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run release-plz
        uses: release-plz/action@v0.5
        with:
          command: release-pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
