[env]
# Define the list of folders to generate changelogs for
CHANGELOG_FOLDERS = "proto,crates/agglayer-bincode,crates/unified-bridge,crates/agglayer-interop,crates/agglayer-primitives,crates/agglayer-tries"

[tasks.default]
alias = "changelog-all"

[tasks.check-git-cliff]
description = "Check if git-cliff is installed"
script = [
    '''
    if ! command -v git-cliff &> /dev/null; then
        echo "git-cliff is not installed. Installing..."
        cargo install git-cliff
    else
        echo "git-cliff is already installed"
    fi
    '''
]

[tasks.changelog-all]
description = "Generate changelogs for all configured folders"
dependencies = ["check-git-cliff"]
script = [
    '''
    IFS=',' read -ra FOLDERS <<< "${CHANGELOG_FOLDERS}"
    for folder in "${FOLDERS[@]}"; do
        if [ -d "$folder" ]; then
            echo "Generating changelog for folder: $folder"
            git cliff --include-path "$folder/**" --output "${folder}/CHANGELOG.md" || {
                echo "Warning: Failed to generate changelog for $folder"
            }
        else
            echo "Warning: Folder '$folder' does not exist, skipping..."
        fi
    done
    echo "All changelogs generated"
    '''
]

[tasks.changelog-folder]
description = "Generate changelog for a specific folder"
dependencies = ["check-git-cliff"]
script = [
    '''
    if [ -z "${FOLDER}" ]; then
        echo "Error: Please specify FOLDER environment variable"
        echo "Usage: cargo make changelog-folder --env FOLDER=src"
        exit 1
    fi

    if [ -d "${FOLDER}" ]; then
        echo "Generating changelog for folder: ${FOLDER}"
        git cliff --include-path "${FOLDER}/**" --output "${FOLDER}/CHANGELOG.md"
        echo "Changelog generated: ${FOLDER}/CHANGELOG.md"
    else
        echo "Error: Folder '${FOLDER}' does not exist"
        exit 1
    fi
    '''
]

[tasks.changelog-full]
description = "Generate full project changelog"
dependencies = ["check-git-cliff"]
script = [
    "echo 'Generating full project changelog...'",
    "git cliff --output CHANGELOG.md",
    "echo 'Full changelog generated: CHANGELOG.md'"
]

[tasks.changelog-unreleased]
description = "Generate changelog for unreleased changes only"
dependencies = ["check-git-cliff"]
script = [
    "echo 'Generating unreleased changelog...'",
    "git cliff --unreleased --output UNRELEASED.md",
    "echo 'Unreleased changelog generated: UNRELEASED.md'"
]

[tasks.changelog-since-tag]
description = "Generate changelog since a specific tag"
dependencies = ["check-git-cliff"]
script = [
    '''
    if [ -z "${TAG}" ]; then
        echo "Error: Please specify TAG environment variable"
        echo "Usage: cargo make changelog-since-tag --env TAG=v1.0.0"
        exit 1
    fi

    echo "Generating changelog since tag: ${TAG}"
    git cliff "${TAG}.." --output "CHANGELOG-since-${TAG}.md"
    echo "Changelog generated: CHANGELOG-since-${TAG}.md"
    '''
]



[tasks.changelog-version-all]
description = "Generate version-specific changelogs for all crates and proto folder using their respective Cargo.toml versions"
dependencies = ["check-git-cliff"]
script = [
    '''
    # Get current date in ISO format
    CURRENT_DATE=$(date +%Y-%m-%d)

    echo "Generating version-specific changelogs for all crates and proto folder"
    echo "Date: ${CURRENT_DATE}"
    echo ""

    # Get root workspace version for fallback
    ROOT_VERSION=""
    if [ -f "Cargo.toml" ]; then
        ROOT_VERSION=$(grep '^version' Cargo.toml | head -1 | awk -F'"' '{print $2}')
    fi

    # Generate changelog for proto folder using root Cargo.toml version
    if [ -d "proto" ]; then
        if [ -f "Cargo.toml" ]; then
            PROTO_VERSION="$ROOT_VERSION"
            if [ -n "$PROTO_VERSION" ]; then
                echo "Generating changelog for proto (version: v${PROTO_VERSION})..."
                git cliff --include-path "proto/**" --tag "v${PROTO_VERSION}" --output "proto/CHANGELOG.md" || {
                    echo "Warning: Failed to generate changelog for proto"
                }
                echo "✓ proto/CHANGELOG.md (v${PROTO_VERSION})"
            else
                echo "Warning: Could not extract version from root Cargo.toml for proto"
            fi
        else
            echo "Warning: Root Cargo.toml not found, skipping proto changelog"
        fi
    else
        echo "Warning: proto folder does not exist, skipping..."
    fi

    # Generate changelogs for all crates using their individual Cargo.toml versions
    if [ -d "crates" ]; then
        for crate_dir in crates/*/; do
            if [ -d "$crate_dir" ]; then
                crate_name=$(basename "$crate_dir")
                cargo_toml="${crate_dir}Cargo.toml"

                if [ -f "$cargo_toml" ]; then
                    # Check if version uses workspace inheritance
                    if grep -q '^version.*workspace.*=.*true' "$cargo_toml"; then
                        CRATE_VERSION="$ROOT_VERSION"
                        echo "Generating changelog for crate: $crate_name (version: v${CRATE_VERSION} - inherited from workspace)..."
                    else
                        CRATE_VERSION=$(grep '^version' "$cargo_toml" | head -1 | awk -F'"' '{print $2}')
                        echo "Generating changelog for crate: $crate_name (version: v${CRATE_VERSION})..."
                    fi

                    if [ -n "$CRATE_VERSION" ]; then
                        git cliff --include-path "${crate_dir}**" --tag "v${CRATE_VERSION}" --output "${crate_dir}CHANGELOG.md" || {
                            echo "Warning: Failed to generate changelog for $crate_name"
                        }
                        echo "✓ ${crate_dir}CHANGELOG.md (v${CRATE_VERSION})"
                    else
                        echo "Warning: Could not extract version from $cargo_toml for $crate_name"
                    fi
                else
                    echo "Warning: $cargo_toml not found, skipping $crate_name"
                fi
            fi
        done
    else
        echo "Warning: crates folder does not exist, skipping..."
    fi

    echo ""
    echo "All version-specific changelogs generated using respective Cargo.toml versions"
    echo "Date used: ${CURRENT_DATE}"
    '''
]

[tasks.changelog-custom-path]
description = "Generate changelog for custom path pattern"
dependencies = ["check-git-cliff"]
script = [
    '''
    if [ -z "${PATH_PATTERN}" ]; then
        echo "Error: Please specify PATH_PATTERN environment variable"
        echo "Usage: cargo make changelog-custom-path --env PATH_PATTERN='src/lib/**'"
        exit 1
    fi

    OUTPUT_NAME=$(echo "${PATH_PATTERN}" | sed 's/[^a-zA-Z0-9]/-/g' | sed 's/--*/-/g' | sed 's/^-\|-$//g')
    echo "Generating changelog for path pattern: ${PATH_PATTERN}"
    git cliff --include-path "${PATH_PATTERN}" --output "${OUTPUT_NAME}/CHANGELOG.md"
    echo "Changelog generated: ${OUTPUT_NAME}/CHANGELOG.md"
    '''
]

[tasks.changelog-clean]
description = "Clean generated changelog files"
script = [
    "echo 'Cleaning changelog files...'",
    "rm -rf ${CHANGELOG_OUTPUT_DIR}",
    "rm -f CHANGELOG.md UNRELEASED.md CHANGELOG-since-*.md",
    "echo 'Changelog files cleaned'"
]

[tasks.changelog-list-folders]
description = "List configured folders for changelog generation"
script = [
    '''
    echo "Configured folders for changelog generation:"
    IFS=',' read -ra FOLDERS <<< "${CHANGELOG_FOLDERS}"
    for folder in "${FOLDERS[@]}"; do
        if [ -d "$folder" ]; then
            echo "  ✓ $folder (exists)"
        else
            echo "  ✗ $folder (missing)"
        fi
    done
    '''
]

[tasks.changelog-help]
description = "Show available changelog tasks"
script = [
    '''
    echo "Available changelog tasks:"
    echo ""
    echo "  cargo make changelog-all           - Generate changelogs for all configured folders"
    echo "  cargo make changelog-folder        - Generate changelog for specific folder"
    echo "                                       Usage: --env FOLDER=src"
    echo "  cargo make changelog-full          - Generate full project changelog"
    echo "  cargo make changelog-unreleased    - Generate changelog for unreleased changes"
    echo "  cargo make changelog-since-tag     - Generate changelog since specific tag"
    echo "                                       Usage: --env TAG=v1.0.0"
    echo "  cargo make changelog-version-all   - Generate version-specific changelogs for all crates and proto"
    echo "                                       (uses versions from respective Cargo.toml files)"
    echo "  cargo make changelog-custom-path   - Generate changelog for custom path pattern"
    echo "                                       Usage: --env PATH_PATTERN='src/lib/**'"
    echo "  cargo make changelog-clean         - Clean generated changelog files"
    echo "  cargo make changelog-list-folders  - List configured folders"
    echo "  cargo make changelog-help          - Show this help"
    echo ""
    echo "Configuration:"
    echo "  Edit CHANGELOG_FOLDERS in [env] section to customize folder list"
    echo "  Current folders: ${CHANGELOG_FOLDERS}"
    '''
]
